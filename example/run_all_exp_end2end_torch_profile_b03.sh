#!/bin/bash

# Profile with all configs using all_end2end_profile.py, and rename the results generated by PyTorch Profiler

base_path="./ir_config"
result_path="./result0118"

nequip_path="$base_path/nequip"
hs=(32) #  64
lmaxs=(1 2 3 4 5) # 1 2 3 4 5 6
layer_idxs=(3) # 0 1 2 
target_batch_sizes=(32768) # 16384 
DTYPES=("fp32" "fp64") # "fp64" "fp32" 
model="nequip"


py_name=$1
force=$2
# version=$2

for dtypes in "${DTYPES[@]}"; do
    for h in "${hs[@]}"; do
        for lmax in "${lmaxs[@]}"; do
            filename="$nequip_path/4_${h}_${lmax}_p_sc.txt"
            for layer_idx in "${layer_idxs[@]}"; do
                for target_batch_size in "${target_batch_sizes[@]}"; do
                    if [ "$lmax" -eq 1 -a "$layer_idx" -ne 3 ]; then
                        run_cueq="False"
                    elif [ "$lmax" -eq 2 ]; then
                        run_cueq="False"
                    elif [ "$lmax" -ge 4 -a "$layer_idx" -eq 0 ]; then
                        run_cueq="False"
                    else
                        run_cueq="True"
                    fi

                    if [ "$lmax" -eq 5 -a "$dtypes" = "fp64" ]; then
                        run_e3nn="False"
                    else
                        run_e3nn="True"
                    fi

                    

                    folder_path="${result_path}/${dtypes}/${model}_h_${h}_lmax_${lmax}_bsize_${target_batch_size}_layer_${layer_idx}_exp"
                    files=($(ls "$folder_path"/*.json 2>/dev/null | sort))

                    if [ ${#files[@]} -ge 1 ]; then
                        if [ $force -eq 0 ]; then
                            echo "force overwrite is False"
                            echo "JSON files exist in $folder_path. Skipping"
                            continue
                        else
                            echo "force overwrite is True"
                            echo "Removing JSON files existing in $folder_path."
                            for file in "${files[@]}"; do
                                rm "$file"
                            done
                        fi
                    fi

                    echo "Running with: $filename, $layer_idx, $target_batch_size, 4, $run_cueq, $run_e3nn" 

                    CUDA_VISIBLE_DEVICES=1 python ${py_name} ${filename} ${layer_idx} ${target_batch_size} 4 ${dtypes} ${run_cueq} ${result_path} ${run_e3nn}
                    


                    files=($(ls "$folder_path"/*.json 2>/dev/null | sort))

                    if [ ${#files[@]} -eq 0 ]; then
                        echo "No JSON files found in $folder_path"
                        continue
                    fi

                    counter=0
                    for file in "${files[@]}"; do
                        new_name="$folder_path/iter_${counter}.json"
                        mv "$file" "$new_name"
                        echo "Renamed: $(basename "$file") -> $(basename "$new_name")"
                        ((counter++))
                    done

                    echo "All files have been renamed!"
                done
            done
        done
    done
done